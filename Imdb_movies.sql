USE MOVIES_IMDB;
SHOW TABLES;
describe ACTORS;
SELECT *FROM ACTORS;
SELECT *FROM MOVIES;
SELECT *FROM MOVIES LIMIT 20;   -- GIVES 1ST 20 RECORDS 
SELECT NAME , YEAR FROM MOVIES LIMIT 20 OFFSET 20;  -- GIVE 1ST 20 RECORDS AFTER IGNORING 1ST 20;
SELECT ID,YEAR FROM MOVIES LIMIT 20 offset 40;  -- GIVE 1ST 20 RECORDS AFTER IGNORING 1ST 40;
SELECT *FROM ACTORS
order by first_name;
describe MOVIES_GENRES;
SELECT GENRE FROM MOVIES_GENRES;
SELECT distinct(GENRE) FROM MOVIES_GENRES order by GENRE;
SELECT distinct FIRST_NAME , LAST_NAME FROM DIRECTORS;
SELECT NAME ,YEAR,RANKSCORE FROM MOVIES WHERE RANKSCORE>9
ORDER BY RANKSCORE desc
LIMIT 20 ;
SELECT * FROM MOVIES_GENRES WHERE GENRE="COMEDY";
SELECT * FROM MOVIES_GENRES WHERE GENRE<> "COMEDY";
SELECT * FROM MOVIES_GENRES WHERE GENRE=NULL;   -- NULL SHOULD NOT BE USED WITH "="
SELECT NAME,YEAR ,RANKSCORE FROM MOVIES WHERE RANKSCORE=NULL;   -- NULL SHOULD NOT BE USED WITH "=" IS GIVES EMPTY RESULT
SELECT NAME,YEAR,RANKSCORE FROM MOVIES WHERE RANKSCORE IS NULL LIMIT 20;
SELECT NAME,YEAR,RANKSCORE FROM MOVIES WHERE RANKSCORE IS NOT NULL LIMIT 20;
SELECT NAME,YEAR,RANKSCORE FROM MOVIES WHERE RANKSCORE>9 AND YEAR>2000;
SELECT NAME,YEAR,RANKSCORE FROM MOVIES WHERE RANKSCORE>9 OR YEAR>=2000;
SELECT NAME,YEAR,RANKSCORE FROM MOVIES WHERE NOT YEAR>=2000;
SELECT *FROM MOVIES WHERE YEAR BETWEEN 1999 AND 2000;           -- MENTION LOW VALUE 1ST AND HIGH VALUE NEXT
select MAX(YEAR) FROM MOVIES;
SELECT COUNT(*) FROM MOVIES;
SELECT COUNT(*) FROM MOVIES WHERE YEAR>2000;
SELECT COUNT(RANKSCORE) FROM MOVIES;
SELECT AVG(YEAR),SUM(YEAR),COUNT(YEAR),MAX(YEAR),MIN(YEAR) FROM MOVIES;
SELECT NAME,YEAR,RANKSCORE,
ROW_NUMBER() OVER (ORDER BY RANKSCORE DESC) AS RANK_
FROM MOVIES LIMIT 20;
SELECT name,YEAR,RANKSCORE,
ROW_NUMBER() OVER (partition by YEAR ORDER BY RANKSCORE desc) AS RANK_
FROM MOVIES LIMIT 20;

SELECT name,YEAR,RANKSCORE,
RANK() OVER ( ORDER BY RANKSCORE desc) AS RANK_
FROM MOVIES;

SELECT name,YEAR,RANKSCORE,
DENSE_RANK() OVER ( ORDER BY RANKSCORE desc) AS RANK_
FROM MOVIES;
SELECT YEAR , COUNT(YEAR) FROM MOVIES group by YEAR ;
SELECT YEAR , COUNT(YEAR) FROM MOVIES group by YEAR order by YEAR;
SELECT YEAR , COUNT(YEAR) FROM MOVIES group by YEAR LIMIT 10;
SELECT RANKSCORE,COUNT(RANKSCORE) FROM MOVIES GROUP BY RANKSCORE LIMIT 10;
SELECT 
    RANKSCORE, COUNT(*) AS COUNT_NULL
FROM
    MOVIES
WHERE
    RANKSCORE IS NULL
GROUP BY RANKSCORE;

SELECT 
    YEAR, COUNT(YEAR)
FROM
    MOVIES
GROUP BY YEAR
HAVING YEAR > 2000
ORDER BY YEAR;

SELECT YEAR ,COUNT(YEAR) FROM MOVIES HAVING YEAR>2007 ;   -- WITHOUT USING GROUP BY HAVING CONDITION WILL NOT WORK


SELECT 
    YEAR, COUNT(YEAR) YEAR_COUNT
FROM
    MOVIES
WHERE
    YEAR > 2000
GROUP BY YEAR
HAVING YEAR_COUNT > 10
ORDER BY YEAR;

SELECT M.NAME , G.GENRE FROM MOVIES M INNER JOIN MOVIES_GENRES G ON M.ID=G.MOVIE_ID LIMIT 10;

SELECT M.NAME,G.GENRE FROM MOVIES M LEFT JOIN MOVIES_GENRES G ON M.ID=G.MOVIE_ID LIMIT 10;

SELECT M.NAME,G.GENRE FROM MOVIES M RIGHT JOIN MOVIES_GENRES G ON M.ID=G.MOVIE_ID LIMIT 10;

SELECT M.NAME,G.GENRE FROM MOVIES M  JOIN MOVIES_GENRES G ON M.ID=G.MOVIE_ID LIMIT 10;




